group 'LaboonChess'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'

mainClassName = "LaboonChess"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

/**
 * Prints out test outputs in nicely formatted string
 */
task filepermission(type: Exec) {
    String OSName = (System.getProperty("os.name")).toLowerCase();
    if (OSName.contains("mac")) {
        commandLine 'chmod', '777', 'src/main/resources/binaries/mac/stockfish-8-64'
    } else if (OSName.contains("win")){
        // None
    } else {
        commandLine 'chmod', '777', 'src/main/resources/binaries/linux/stockfish_8_x64'
    }

}

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events "passed", "skipped", "failed", "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

dependencies {
    compile files('libs/chesslib-0.1-SNAPSHOT.jar')
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.testfx:testfx-core:4.0.+"
    testCompile "org.testfx:testfx-junit:4.0.+"
}
